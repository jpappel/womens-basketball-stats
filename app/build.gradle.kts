/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    id("gg.jte.gradle") version("3.1.9")
    id("org.openjfx.javafxplugin") version("0.1.0")
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation(libs.junit)

    // This dependency is used by the application.
    implementation(libs.guava)

    // Web framework
    implementation("io.javalin:javalin:6.1.0")

    // JTE template engine
    implementation("gg.jte:jte:3.1.9")

    // Javalin rendering
    implementation("io.javalin:javalin-rendering:6.1.0")

    //TODO: consolidate these into a single library
    //json library
    implementation("com.fasterxml.jackson.core:jackson-databind:2.16.1")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0")
    //another json library
    implementation("com.google.code.gson:gson:2.10.1")

    //logging library
    implementation("org.slf4j:slf4j-simple:2.0.10")

    //java sqlite database connector
    implementation("org.xerial:sqlite-jdbc:3.45.1.0")

    // JavaFX
    implementation("org.openjfx:javafx-web:21")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = "Main"
}

javafx {
    version = "21"
    modules("javafx.controls", "javafx.fxml", "javafx.web")
}

jte {
    precompile()
}

tasks.distZip {
    dependsOn(":app:precompileJte")
}

tasks.distTar {
    dependsOn(":app:precompileJte")
}


distributions {
    main {
        contents {
            val jte = extensions.getByType<gg.jte.gradle.JteExtension>()
            from(jte.targetDirectory) {
                into("templates")
            }
        }
    }
}
